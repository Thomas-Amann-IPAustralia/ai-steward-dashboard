# .github/workflows/deploy.yml
name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'analysis/**'
      - 'snapshots/**'
      - 'hashes.json'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Debug repository state
      run: |
        echo "📁 Repository contents:"
        ls -la
        echo "📦 Package.json exists: $([ -f package.json ] && echo 'YES' || echo 'NO')"
        echo "🔒 Package-lock.json exists: $([ -f package-lock.json ] && echo 'YES' || echo 'NO')"
        echo "📱 Node version: $(node --version)"
        echo "📦 NPM version: $(npm --version)"
        
    - name: Install dependencies with fallback
      run: |
        echo "🚀 Starting dependency installation..."
        
        # Clear any existing node_modules and npm cache
        rm -rf node_modules
        npm cache clean --force
        
        # Method 1: Try npm ci if package-lock exists
        if [ -f "package-lock.json" ]; then
          echo "📋 Using npm ci (package-lock.json found)"
          if npm ci --prefer-offline --no-audit; then
            echo "✅ npm ci successful"
          else
            echo "❌ npm ci failed, trying npm install..."
            rm -rf node_modules package-lock.json
            npm install
          fi
        else
          echo "📦 Using npm install (no package-lock.json)"
          npm install
        fi
        
        # Verify installation
        echo "🔍 Verifying installation..."
        npm list --depth=0 || true
        
        # Check for React Scripts specifically
        if [ ! -d "node_modules/react-scripts" ]; then
          echo "❌ react-scripts not found, installing specifically..."
          npm install react-scripts
        fi
        
        echo "✅ Dependencies installed successfully"
        
    - name: Build React app
      run: |
        echo "🏗️ Building React application..."
        npm run build
      env:
        CI: true
        GENERATE_SOURCEMAP: false

    - name: Copy data files to build directory
      run: |
        echo "Copying data files to build directory..."
        # Create the directories if they don't exist
        mkdir -p build/analysis
        mkdir -p build/snapshots
        
        # Copy the files
        cp hashes.json build/
        cp -r analysis/* build/analysis/
        cp -r snapshots/* build/snapshots/
        
    - name: Verify build output
      run: |
        echo "🔍 Verifying build output..."
        
        if [ ! -d "build" ]; then
          echo "❌ Build directory not found!"
          echo "📁 Current directory contents:"
          ls -la
          exit 1
        fi
        
        if [ ! -f "build/index.html" ]; then
          echo "❌ index.html not found in build directory!"
          echo "📁 Build directory contents:"
          ls -la build/
          exit 1
        fi
        
        echo "✅ Build verification successful"
        echo "📊 Build size: $(du -sh build)"
        echo "📁 Build contents:"
        ls -la build/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
